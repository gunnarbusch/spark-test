---
kind: Template
apiVersion: v1
metadata:
  name: openeo-spark
  annotations:
    openshift.io/display-name: openeo-spark
    description: >-
      The templates instantiates the spark service for openEO on OpenShift Origin.
    openshift.io/long-description: >-
      Multiple services are setup to provide the OpenEO capabilities. For setting up a
      OpenShift cluster and configure persitant storage please read the OpenShift documentation.
      Fur further information on OpenEO please have a look at http://openeo.org
    tags: openeo, openshift, python, flask
    iconClass: icon-python
labels:
  application: openeo-spark
  provider: openeo
  project: openeo
  app: openeo-spark
  version: 0.0.1
message: "The openEO template will be instantiated." 

parameters:
- name: SERVICE_PREFIX
  displayName: Service Prefix
  value: openeo
  required: true
- name: SERVICE_NAME
  displayName: Service Name
  value: spark
  required: true
- name: GIT_URI
  displayName: Git URI
  value: https://github.com/gunnarbusch/spark-test
  required: true
- name: GIT_REF
  displayName: Git Reference
  value: master
  required: true
- name: GIT_DIR
  displayName: Git Directory
  value: .
  required: true
- name: MEMORY_LIMIT_SERVICE
  displayName: Memory Limit
  value: 512Mi
  required: true

objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${SERVICE_PREFIX}-${SERVICE_NAME}"
  spec:
    dockerImageRepository:
    tags:
    - name: latest

- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${SERVICE_PREFIX}-${SERVICE_NAME}"
  spec:
    source:
      type: Git
      git:
        uri: "${GIT_URI}"
        ref: "${GIT_REF}"
      contextDir: "${GIT_DIR}"
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
    output:
      to:
        kind: ImageStreamTag
        name: "${SERVICE_PREFIX}-${SERVICE_NAME}:latest"
    triggers:
    - type: GitLab
      gitlab:
        secret: "${GITLAB_SECRET}"
    - type: ConfigChange
    - type: ImageChange
      imageChange:

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${SERVICE_PREFIX}-${SERVICE_NAME}"
    labels:
      name: "${SERVICE_PREFIX}-${SERVICE_NAME}"
      application: "${SERVICE_PREFIX}-${SERVICE_NAME}"
      provider: "${SERVICE_PREFIX}"
      project: "${SERVICE_PREFIX}"
      app: "${SERVICE_PREFIX}-${SERVICE_NAME}"
      version: 0.0.1
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${SERVICE_PREFIX}-${SERVICE_NAME}"
        from:
          kind: ImageStreamTag
          name: "${SERVICE_PREFIX}-${SERVICE_NAME}:latest"
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${SERVICE_PREFIX}-${SERVICE_NAME}"
    template:
      metadata:
        labels:
          name: "${SERVICE_PREFIX}-${SERVICE_NAME}"
      spec:
        containers:
        - name: "${SERVICE_PREFIX}-${SERVICE_NAME}"
          image: "${SERVICE_PREFIX}-${SERVICE_NAME}"
          resources:
            limits:
              memory: "${MEMORY_LIMIT_SERVICE}"
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
          securityContext:
            capabilities:
            privileged: false
        restartPolicy: Always
        dnsPolicy: ClusterFirst

- kind: Route
  apiVersion: v1
  metadata:
    name: "${SERVICE_PREFIX}-${SERVICE_NAME}"
    annotations:
      description: openEO Spark endpoint
  spec:
    to:
      kind: Service
      name: "${SERVICE_PREFIX}-${SERVICE_NAME}"

- kind: Service
  apiVersion: v1
  metadata:
    name: "${SERVICE_PREFIX}-${SERVICE_NAME}"
    annotations:
      description: The port of the spark endpoint
  spec:
    ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      name: "${SERVICE_PREFIX}-${SERVICE_NAME}"